# -*- coding: utf-8 -*-
"""utils/graph_builders.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w-a5Ap8dhMsvupSReN72AeF16HADU3Bg
"""

import torch
import torch.nn.functional as F

def build_FSG(features, k=8):
    with torch.no_grad():
        normed = F.normalize(features, p=2, dim=1)
        sim_matrix = torch.matmul(normed, normed.T)
        sim_matrix.fill_diagonal_(0)
        topk = torch.topk(sim_matrix, k=k, dim=1).indices
        adj = torch.zeros_like(sim_matrix)
        for i in range(features.size(0)):
            adj[i, topk[i]] = 1
        adj = torch.maximum(adj, adj.T)
    return adj

def build_TRG(T, d=2):
    adj = torch.zeros((T, T))
    for i in range(T):
        for j in range(max(0, i - d), min(T, i + d + 1)):
            if i != j:
                adj[i, j] = 1
    return adj